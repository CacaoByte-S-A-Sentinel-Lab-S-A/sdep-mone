---
export interface Props {
  lastPage: number;
  current: number;
  prevURL?: string;
  nextURL?: string;
  style?: string;
  class?: string;
}

const props = Astro.props;

const maxVisiblePages = 5;
let pages: (string | number)[] = [];

if (props.lastPage <= maxVisiblePages) {
  pages = Array.from({ length: props.lastPage }, (_, i) => i + 1);
} else {
  const startPage = Math.max(
    1,
    props.current - Math.floor(maxVisiblePages / 2),
  );
  const endPage = Math.min(props.lastPage, startPage + maxVisiblePages - 1);

  if (startPage > 1) pages.push(1);
  if (startPage > 2) pages.push("...");

  pages.push(
    ...Array.from({ length: endPage - startPage + 1 }, (_, i) => startPage + i),
  );

  if (endPage < props.lastPage - 1) pages.push("...");
  if (endPage < props.lastPage) pages.push(props.lastPage);
}
---

<div
  class="flex flex-row justify-center space-x-4"
  style={props.style}
  class:list={[props.class]}
>
  <a
    href={props.prevURL}
    class:list={[props.prevURL ? "button" : "button-disabled"]}
  >
    <span>＜</span>
  </a>

  <div class="flex flex-row space-x-2">
    {
      pages.map((page) =>
        page === "..." ? (
          <span class="text-md text-[var(--primary-color)]">...</span>
        ) : (
          <a
            href={page === 1 ? "/" : `/${page}`}
            class:list={[page === props.current ? "button-selected" : "button"]}
          >
            <span>{page}</span>
          </a>
        ),
      )
    }
  </div>

  <a
    href={props.nextURL}
    class:list={[props.nextURL ? "button" : "button-disabled"]}
  >
    <span>＞</span>
  </a>
</div>